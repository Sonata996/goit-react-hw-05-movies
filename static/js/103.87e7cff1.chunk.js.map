{"version":3,"file":"static/js/103.87e7cff1.chunk.js","mappings":"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","sources":["components/GoBack/GoBack.styled.js","components/GoBack/CoBack.js","components/PosterPath/PosterPath.style.js","components/PosterPath/PosterPath.js","components/BlockInfoMovie/BlockInfoMovie.js","pages/MovieDetails/MovieDetails.styled.js","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.js","pages/MovieDetails/MovieDetails.js","service/serviceApi.js"],"sourcesContent":["import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\n\n\nexport const ConteinerGoBack = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n`","import { BiArrowBack } from \"react-icons/bi\";\nimport { ConteinerGoBack } from \"./GoBack.styled\";\n\nexport const GoBack = (props) =>{\n    const {location} = props\nreturn (\n    <div>\n    <ConteinerGoBack to={location.state ? location.state.from :'/'} >\n        <BiArrowBack />\n            <p>Go back</p>\n        </ConteinerGoBack>\n                \n    </div>\n)\n}","import styled from 'styled-components'\n\n\nexport const ConteinerPoster = styled.div`\n  max-width: 300px;\n`\nexport const Poster = styled.img`\n  max-width: 300px;\n`","import { ConteinerPoster, Poster } from \"./PosterPath.style\"\n\n\nexport const PosterPath = ({movie}) =>{\n    return(\n        <ConteinerPoster>\n        <Poster src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={`\"${movie.original_title}\" Poster path`} /> \n    </ConteinerPoster> \n    )\n}","import { format } from 'date-fns'\n\n\nexport const BlockInfoMovie = ({movie}) =>{\nreturn(\n    <div>\n               <h1>\n                    {movie.original_title}\n                    <span>({format(new Date(movie.release_date), \"yyyy\")})</span>\n                </h1>\n                <h4>User Score: {movie.vote_average.toFixed(1)}%</h4>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p> \n                <h3>Genres</h3>\n                {movie.genres.map(elem => <span key={elem.id}>{elem.name}</span>)}\n            </div>\n)\n}","import styled from 'styled-components'\n\n\n\nexport const ConteinerInfoBlock = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\n","import styled from 'styled-components'\nimport { Link } from \"react-router-dom\"\n\n\nexport const ListAdditional = styled.ul`\nlist-style: none;\ndisplay: flex;\ngap: 15px;\npadding-left: 10px;\n`\n\nexport const LinkList = styled(Link)`\ntext-decoration: none;\n`","import { LinkList, ListAdditional } from \"./AdditionalInfo.styled\"\n\n\nexport const ListAdditionalInfo = ({location}) =>{\n    return(\n        <ListAdditional>\n            <li>\n            <LinkList to=\"cast\" state={location.state}>\n                Cast\n              </LinkList> \n            </li>\n             <li>\n                <LinkList to=\"reviews\" state={location.state}>\n                Reviews\n              </LinkList>\n             </li>\n        </ListAdditional>\n    )\n}","import { Suspense, useEffect, useState} from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\"\nimport { serviceApiMovieId } from \"service/serviceApi\";\n\nimport { GoBack } from \"components/GoBack/CoBack\";\nimport { PosterPath } from \"components/PosterPath/PosterPath\";\nimport { BlockInfoMovie } from \"components/BlockInfoMovie/BlockInfoMovie\";\nimport { ConteinerInfoBlock } from \"./MovieDetails.styled\";\nimport { ListAdditionalInfo } from \"components/AdditionalInfo/AdditionalInfo\";\n\n\n\n\n\nexport default function MovieElemInfo(){\n    const params = useParams()\n    const [movie, setMovie] = useState()\n\n\n    const location = useLocation();\n\nuseEffect(()=>{\n    async function getApiMovieId() {\n        try{\n            const getApi = await serviceApiMovieId(params.movieId)\n            setMovie(getApi)\n\n        }catch{\n            \n        }\n    }\n    getApiMovieId();\n}, [params.movieId]);\n\n    return(\n        <div> \n            {movie && (\n                <>\n            <GoBack location={location}/>\n\n        <ConteinerInfoBlock>\n            <PosterPath movie={movie}/>\n            <BlockInfoMovie  movie={movie}/>\n         </ConteinerInfoBlock>\n         <div>\n            <h4>Additional information</h4>\n\n            <ListAdditionalInfo location={location}/>\n\n            <Suspense fallback={<div> <h1>Page error. Please reload again</h1></div>}>\n            <Outlet />\n          </Suspense>\n         </div>\n            </>\n            )}\n            \n        </div>\n    )\n}","import axios from 'axios';\n\n\nconst KeyApi= '891cc72aafe06da2b3bebc54fcfb98d7'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\n\nexport const serviceAPITrending = async () =>{\n   const getApi = await axios.get(`trending/movie/day?api_key=${KeyApi}&language=en-US`)\n    return getApi.data\n}\n\nexport const serviceAPISearch = async (value) =>{\n    const getApi = await axios.get(`/search/movie?api_key=${KeyApi}&query=${value}&language=en-US`)\n     return getApi.data\n }\n\nexport const serviceApiMovieId = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n\nexport const serviceApiMovieCredits = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}/credits?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n\nexport const serviceApiMovieReviews = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}/reviews?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n"],"names":["ConteinerGoBack","styled","Link","GoBack","props","location","to","state","from","ConteinerPoster","Poster","PosterPath","movie","src","poster_path","alt","original_title","BlockInfoMovie","format","Date","release_date","vote_average","toFixed","overview","genres","map","elem","name","id","ConteinerInfoBlock","ListAdditional","LinkList","ListAdditionalInfo","MovieElemInfo","params","useParams","useState","setMovie","useLocation","useEffect","serviceApiMovieId","movieId","getApi","getApiMovieId","Suspense","fallback","KeyApi","axios","serviceAPITrending","data","serviceAPISearch","value","elemId","serviceApiMovieCredits","serviceApiMovieReviews"],"sourceRoot":""}