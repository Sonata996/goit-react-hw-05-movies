{"version":3,"file":"static/js/126.99b8838b.chunk.js","mappings":"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","sources":["components/ListSearch/ListSearch.styled.js","components/ListSearch/ListSearch.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.js","hook/useSearch.js","service/serviceApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 15px;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n\nexport const Paragraf = styled.p`\n  max-width: 200px;\n`;\n\nexport const LinkTranding = styled(Link)`\n  color: #e0dfdc;\n  text-decoration: none;\n  &:hover {\n    color: #a8a8a8;\n  }\n`;\n","import { LinkTranding, Img, Paragraf, List } from './ListSearch.styled';\n\nexport const ListSearch = ({ searchValue, location }) => {\n  return (\n    <List>\n      {searchValue.results.map(\n        elem =>\n          elem.poster_path && (\n            <li key={elem.id}>\n              <LinkTranding to={`${elem.id}`} state={{ from: location }}>\n                <Img\n                  src={`https://image.tmdb.org/t/p/w500/${elem.poster_path}`}\n                  alt=\"Poster\"\n                />\n                <Paragraf>{elem.title}</Paragraf>\n              </LinkTranding>\n            </li>\n          )\n      )}\n    </List>\n  );\n};\n","import { Field, Form } from 'formik';\nimport { FaSearch } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nexport const FormConteiner = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const Forma = styled(Form)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  position: relative;\n  max-width: 216px;\n`;\n\nexport const Input = styled(Field)`\n  border-radius: 4px;\n  width: 200px;\n  height: 28px;\n  padding-left: 10px;\n`;\n\nexport const ButtonSearch = styled.button`\n  position: absolute;\n  height: 100%;\n  width: 30px;\n  right: 1px;\n  background: rgba(0, 0, 0, 0);\n  border: none;\n  padding: 0;\n`;\n\nexport const SearchIcon = styled(FaSearch)`\n  width: 24px;\n`;\n","import { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { serviceAPISearch } from 'service/serviceApi';\nimport { useSearch } from 'hook/useSearch';\nimport { ListSearch } from 'components/ListSearch/ListSearch';\nimport {\n  FormConteiner,\n  Forma,\n  Input,\n  SearchIcon,\n  ButtonSearch,\n} from './Movies.styled';\n\n// const savedLocalStorage = localStorage.getItem('thisSearch')\n\nexport default function Movies() {\n  const { changeSearch, query } = useSearch();\n  const [searchValue, setSearchValue] = useState([]);\n  const [value, setValue] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getApiSearchValue() {\n      try {\n        const getApi = await serviceAPISearch(query ?? value);\n        setSearchValue(getApi);\n      } catch {}\n    }\n    getApiSearchValue();\n  }, [value, query]);\n\n  return (\n    <FormConteiner>\n      <Formik\n        initialValues={{\n          value: '',\n        }}\n        onSubmit={values => {\n          setValue(values.value);\n          changeSearch(values.value);\n        }}\n      >\n        {({ errors, touched }) => (\n          <Forma>\n            <Input name=\"value\" />\n            {errors.value && touched.value ? <div>{errors.value}</div> : null}\n            <ButtonSearch type=\"submit\">\n              <SearchIcon />\n            </ButtonSearch>\n          </Forma>\n        )}\n      </Formik>\n      {query && searchValue.length !== 0 && (\n        <ListSearch searchValue={searchValue} location={location} />\n      )}\n    </FormConteiner>\n  );\n}\n","import { useSearchParams } from \"react-router-dom\"\n\n\n\nexport const useSearch = () => {\n    const [params, setParams] = useSearchParams();\n    const query = params.get('query') ?? '';\n\n\n    const changeSearch = (evt) => {\n      if (query !== evt) {\n        \n      }\n      params.set('query', evt);\n      setParams(params);\n    };\n    \n      return{\n        query,\n        changeSearch\n      }\n}","import axios from 'axios';\n\n\nconst KeyApi= '891cc72aafe06da2b3bebc54fcfb98d7'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\n\nexport const serviceAPITrending = async () =>{\n   const getApi = await axios.get(`trending/movie/day?api_key=${KeyApi}&language=en-US`)\n    return getApi.data\n}\n\nexport const serviceAPISearch = async (value) =>{\n    const getApi = await axios.get(`/search/movie?api_key=${KeyApi}&query=${value}&language=en-US`)\n     return getApi.data\n }\n\nexport const serviceApiMovieId = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n\nexport const serviceApiMovieCredits = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}/credits?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n\nexport const serviceApiMovieReviews = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}/reviews?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n"],"names":["List","styled","Img","Paragraf","LinkTranding","Link","ListSearch","searchValue","location","results","map","elem","poster_path","to","id","state","from","src","alt","title","FormConteiner","Forma","Form","Input","Field","ButtonSearch","SearchIcon","FaSearch","Movies","useSearchParams","params","setParams","query","get","changeSearch","evt","set","useSearch","useState","setSearchValue","value","setValue","useLocation","useEffect","serviceAPISearch","getApi","getApiSearchValue","initialValues","onSubmit","values","errors","touched","name","type","length","KeyApi","axios","serviceAPITrending","data","serviceApiMovieId","elemId","serviceApiMovieCredits","serviceApiMovieReviews"],"sourceRoot":""}