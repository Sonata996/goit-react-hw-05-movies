{"version":3,"file":"static/js/26.6ff34a80.chunk.js","mappings":"qRAGaA,EAASC,EAAAA,GAAAA,GAAH,+EAMNC,EAAaD,EAAAA,GAAAA,GAAH,gHAOVE,EAAcF,EAAAA,GAAAA,IAAH,6C,SCRT,SAASG,IACpB,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAAsCC,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAI,wCACZ,8GAE8BC,EAAAA,EAAAA,IAAuBN,EAAOO,SAF5D,OAEIC,EAFJ,OAGFJ,EAAeI,GAHb,wGADY,uBAAC,WAAD,wBASlBC,EACC,GAAC,CAACT,EAAOO,WAGF,2BACKJ,GAAeA,EAAYO,OAAQ,0BAAK,oEACxCP,IACD,SAACR,EAAD,UACCQ,EAAYO,KAAKC,KAAI,SAAAC,GAClB,OACI,UAACf,EAAD,YAEA,SAACC,EAAD,CAAae,IAAKD,EAAKE,aAAL,0CACiBF,EAAKE,c,4/GAGxC,wBAAKF,EAAKG,QACV,wCAAgBH,EAAKI,eAPJJ,EAAKK,GAS7B,QAIZ,C,mMCzCKC,EAAQ,mCACdC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGlB,IAAMC,EAAkB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,EAAxC,oBADU,cACzBG,EADyB,yBAEvBA,EAAOC,MAFgB,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAOC,GAAP,uFACPL,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAmDM,EAAnD,oBADO,cACtBH,EADsB,yBAEpBA,EAAOC,MAFa,2CAAH,sDAKhBG,EAAiB,mCAAG,WAAOC,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,mCAAoDR,IAD5C,cACvBG,EADuB,yBAEtBA,EAAOC,MAFe,2CAAH,sDAKjBhB,EAAsB,mCAAG,WAAOoB,GAAP,uFACbP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,2CAA4DR,IAD/C,cAC5BG,EAD4B,yBAE3BA,EAAOC,MAFoB,2CAAH,sDAKtBK,EAAsB,mCAAG,WAAOD,GAAP,uFACbP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,2CAA4DR,IAD/C,cAC5BG,EAD4B,yBAE3BA,EAAOC,MAFoB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/serviceApi.js"],"sourcesContent":["import styled from 'styled-components'\n\n\nexport const UlCast = styled.ul`\n  display: flex;\n    gap: 20px;\n    flex-wrap: wrap\n`\n\nexport const ElemUlCast = styled.li`\n    width: 110px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const ProfilePath = styled.img`\n  max-width: 100px;\n`","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { serviceApiMovieCredits } from \"service/serviceApi\"\nimport { ElemUlCast, ProfilePath, UlCast } from \"./Cast.styled\"\nimport  NoPhoto from 'image/genderless_default.png'\n\n\n\nexport default function Cast (){\n    const params = useParams()\n    const [infoCredits, setInfoCredits] = useState()\n\n    useEffect(()=>{\n      async function foo() {\n            try{\n    const getApiInfoCredits = await serviceApiMovieCredits(params.movieId)\n    setInfoCredits(getApiInfoCredits)\n}catch{\n\n}\n}\nfoo()\n},[params.movieId])\n\n    return(\n        <div>\n            {infoCredits && infoCredits.cast && <div><h1>We don't have any cast for this movie</h1></div>}\n            {infoCredits && (\n            <UlCast>\n            {infoCredits.cast.map(elem =>{\n                return (\n                    <ElemUlCast key={elem.id}>\n                    \n                    <ProfilePath src={elem.profile_path ? \n                    `https://image.tmdb.org/t/p/w500/${elem.profile_path}`\n                    : NoPhoto\n                } />\n                    <h5>{elem.name}</h5>\n                    <h5>Character: {elem.character}</h5>\n            </ElemUlCast>)\n            })}\n            </UlCast>)}\n        </div>\n    )\n}","import axios from 'axios';\n\n\nconst KeyApi= '891cc72aafe06da2b3bebc54fcfb98d7'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\n\nexport const serviceAPITrending = async () =>{\n   const getApi = await axios.get(`trending/movie/day?api_key=${KeyApi}&language=en-US`)\n    return getApi.data\n}\n\nexport const serviceAPISearch = async (value) =>{\n    const getApi = await axios.get(`/search/movie?api_key=${KeyApi}&query=${value}&language=en-US`)\n     return getApi.data\n }\n\nexport const serviceApiMovieId = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n\nexport const serviceApiMovieCredits = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}/credits?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n\nexport const serviceApiMovieReviews = async (elemId) =>{\n    const getApi = await axios.get(`movie/${elemId}/reviews?language=en-US&api_key=${KeyApi}`)\n    return getApi.data\n}\n"],"names":["UlCast","styled","ElemUlCast","ProfilePath","Cast","params","useParams","useState","infoCredits","setInfoCredits","useEffect","serviceApiMovieCredits","movieId","getApiInfoCredits","foo","cast","map","elem","src","profile_path","name","character","id","KeyApi","axios","serviceAPITrending","getApi","data","serviceAPISearch","value","serviceApiMovieId","elemId","serviceApiMovieReviews"],"sourceRoot":""}